import { NextResponse } from 'next/server';

export async function POST(request: Request) {
  try {
    const analysis = await request.json();

    // Simple PDF content - we'll upgrade to proper PDF later
    const pdfContent = `
INDEPENDENTLY - CAREER ROADMAP
===============================

HIDDEN CAREER MATCHES:
${analysis.hiddenCareers?.map((career: any) => `
- ${career.title}
  Why you're qualified: ${career.matchReason}
  Salary: ${career.salaryRange}
  Transition: ${career.transitionDifficulty}
`).join('')}

PRIORITY SKILL GAPS:
${analysis.skillGaps?.map((skill: any) => `
- ${skill.skill} (${skill.priority} priority)
  ${skill.reason}
  Resources: ${skill.resources?.join(', ')}
`).join('')}

90-DAY ACTION PLAN:
Weeks 1-4: ${analysis.actionPlan?.weeks1To4}
Weeks 5-8: ${analysis.actionPlan?.weeks5To8}
Weeks 9-12: ${analysis.actionPlan?.weeks9To12}

SALARY PROJECTIONS:
Current: $${analysis.salaryProjections?.current?.toLocaleString()}
In 90 days: $${analysis.salaryProjections?.in90Days?.toLocaleString()}
In 1 year: $${analysis.salaryProjections?.in1Year?.toLocaleString()}

HIGH-ROI CERTIFICATIONS:
${analysis.certifications?.map((cert: any) => `
- ${cert.name}
  Cost: $${cert.cost} | Duration: ${cert.duration}
  ROI: ${cert.roi} | Salary Impact: +$${cert.salaryImpact}
`).join('')}

Generated by Independently - ${new Date().toLocaleDateString()}
    `.trim();

    // Return as text for now - we'll upgrade to real PDF later
    return new Response(pdfContent, {
      headers: {
        'Content-Type': 'text/plain',
        'Content-Disposition': 'attachment; filename="career-roadmap.txt"'
      }
    });

  } catch (error) {
    console.error('PDF generation error:', error);
    return NextResponse.json(
      { error: 'Failed to generate PDF' },
      { status: 500 }
    );
  }
}